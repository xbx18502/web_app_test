{"ast":null,"code":"import Identify from \"@/components/Identify.vue\";\nexport default {\n  name: \"Login\",\n  components: {\n    Identify\n  },\n  data() {\n    return {\n      form: {\n        role: 'ADMIN'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      code: '',\n      // 表单绑定的验证码\n      // 图片验证码\n      identifyCode: '',\n      // 验证码规则\n      identifyCodes: '123456789ABCDEFGHGKMNPQRSTUVWXY'\n    };\n  },\n  created() {},\n  mounted() {\n    this.refreshCode();\n  },\n  methods: {\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n    },\n    // 生成随机验证码\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * this.identifyCodes.length)];\n      }\n    },\n    login() {\n      if (!this.code) {\n        this.$message.warning(\"please input identification code\");\n        this.refreshCode();\n        return;\n      } else if (this.code.toLowerCase() !== this.identifyCode.toLowerCase()) {\n        this.$message.warning(\"wrong identification code\");\n        this.refreshCode();\n        return;\n      }\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/login', this.form).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data)); // 存储用户数据\n              this.$message.success('登录成功');\n              setTimeout(() => {\n                if (res.data.role === 'ADMIN') {\n                  location.href = '/home';\n                } else {\n                  location.href = '/front/home'; // 跳转主页\n                }\n              }, 500);\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Identify","name","components","data","form","role","rules","username","required","message","trigger","password","code","identifyCode","identifyCodes","created","mounted","refreshCode","methods","makeCode","o","l","i","Math","floor","random","length","login","$message","warning","toLowerCase","$refs","validate","valid","$request","post","then","res","localStorage","setItem","JSON","stringify","success","setTimeout","location","href","error","msg"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div style=\"width: 390px; padding: 50px; background-color: rgba(255,255,255,.75); border-radius: 5px;\">\r\n      <div style=\"text-align: center; font-size: 24px; margin-bottom: 30px; color: #333\">Blog&forum Platform</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"role\">\r\n         <el-radio-group v-model=\"form.role\">\r\n           <el-radio label=\"ADMIN\">Admin</el-radio>\r\n           <el-radio label=\"USER\">User</el-radio>\r\n         </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item prop=\"code\">\r\n          <div style=\"display: flex\">\r\n            <el-input style=\"flex: 1\" size=\"medium\" v-model=\"code\">\r\n            </el-input>\r\n            <Identify :identifyCode=\"identifyCode\" @click.native =\"refreshCode\" />\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button size=\"medium\" style=\"width: 100%; background-color: #329900; border-color: #333; color: white\" @click=\"login\">登 录</el-button>\r\n        </el-form-item>\r\n        <div style=\"display: flex; align-items: center\">\r\n          <div style=\"flex: 1\"></div>\r\n          <div style=\"flex: 1; text-align: right\">\r\n            Don't have any account yet? <a href=\"/register\">sign up here</a>\r\n          </div>\r\n        </div>\r\n      </el-form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Identify from \"@/components/Identify.vue\";\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  components:{\r\n    Identify\r\n  },\r\n  data() {\r\n    return {\r\n      form: { role: 'ADMIN' },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入账号', trigger: 'blur' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' },\r\n        ]\r\n      },\r\n      code: '',   // 表单绑定的验证码\r\n      // 图片验证码\r\n      identifyCode: '',\r\n      // 验证码规则\r\n      identifyCodes: '123456789ABCDEFGHGKMNPQRSTUVWXY',\r\n    }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  mounted() {\r\n    this.refreshCode()\r\n  },\r\n  methods: {\r\n    // 切换验证码\r\n    refreshCode() {\r\n      this.identifyCode = ''\r\n      this.makeCode(this.identifyCodes, 4)\r\n    },\r\n    // 生成随机验证码\r\n    makeCode(o, l) {\r\n      for (let i = 0; i < l; i++) {\r\n        this.identifyCode += this.identifyCodes[Math.floor(Math.random() * (this.identifyCodes.length))]\r\n      }\r\n    },\r\n    login() {\r\n      if(!this.code){\r\n        this.$message.warning(\"please input identification code\")\r\n        this.refreshCode()\r\n        return\r\n      }\r\n      else if(this.code.toLowerCase()!==this.identifyCode.toLowerCase()){\r\n        this.$message.warning(\"wrong identification code\")\r\n        this.refreshCode()\r\n        return\r\n      }\r\n      this.$refs['formRef'].validate((valid) => {\r\n        if (valid) {\r\n          // 验证通过\r\n          this.$request.post('/login', this.form).then(res => {\r\n            if (res.code === '200') {\r\n              localStorage.setItem(\"xm-user\", JSON.stringify(res.data))  // 存储用户数据\r\n              this.$message.success('登录成功')\r\n              setTimeout(() => {\r\n                if(res.data.role==='ADMIN'){\r\n                  location.href='/home'\r\n                }\r\n                else{\r\n                  location.href='/front/home'  // 跳转主页\r\n                }\r\n              }, 500)\r\n\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container {\r\n  height: 100vh;\r\n  overflow: hidden;\r\n  background-image: url(\"@/assets/imgs/bg2.png\");\r\n  background-size: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #666;\r\n}\r\na {\r\n  color: #2a60c9;\r\n}\r\n</style>"],"mappings":"AAuCA,OAAAA,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,IAAA;QAAAC,IAAA;MAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAE,IAAA;MAAA;MACA;MACAC,YAAA;MACA;MACAC,aAAA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA;IACAD,YAAA;MACA,KAAAJ,YAAA;MACA,KAAAM,QAAA,MAAAL,aAAA;IACA;IACA;IACAK,SAAAC,CAAA,EAAAC,CAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAD,CAAA,EAAAC,CAAA;QACA,KAAAT,YAAA,SAAAC,aAAA,CAAAS,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,UAAAX,aAAA,CAAAY,MAAA;MACA;IACA;IACAC,MAAA;MACA,UAAAf,IAAA;QACA,KAAAgB,QAAA,CAAAC,OAAA;QACA,KAAAZ,WAAA;QACA;MACA,OACA,SAAAL,IAAA,CAAAkB,WAAA,YAAAjB,YAAA,CAAAiB,WAAA;QACA,KAAAF,QAAA,CAAAC,OAAA;QACA,KAAAZ,WAAA;QACA;MACA;MACA,KAAAc,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAC,QAAA,CAAAC,IAAA,gBAAA/B,IAAA,EAAAgC,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAzB,IAAA;cACA0B,YAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAJ,GAAA,CAAAlC,IAAA;cACA,KAAAyB,QAAA,CAAAc,OAAA;cACAC,UAAA;gBACA,IAAAN,GAAA,CAAAlC,IAAA,CAAAE,IAAA;kBACAuC,QAAA,CAAAC,IAAA;gBACA,OACA;kBACAD,QAAA,CAAAC,IAAA;gBACA;cACA;YAEA;cACA,KAAAjB,QAAA,CAAAkB,KAAA,CAAAT,GAAA,CAAAU,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}